# vim: ft=icinga

object CheckCommand "ceilometer-statistics" {
    command = [ "/usr/lib/nagios/plugins/check_ceilometer_statistics" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--meter" = {
            value = "$ceilometer_statistics_meter$"
            description = "meter name (required)"
            required = True
        }
        "--tframe" = {
            value = "$ceilometer_statistics_tframe$"
            description = "Time frame to look back in minutes"
        }
        "--tzone" = {
            value = "$ceilometer_statistics_tzone$"
            description = "Timezone to use. Ceilometer does not store any timezone information with the samples."
        }
        "--warn" = {
            value = "$ceilometer_statistics_warn$"
            description = "return warning if value is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$ceilometer_statistics_critical$"
            description = "return critical if value is outside RANGE (default 0:, never critical)"
        }
        "--warn_count" = {
            value = "$ceilometer_statistics_warn_count$"
            description = "return warning if the number of samples is outside RANGE (default: 0:, never warn)"
        }
        "--critical_count" = {
            value = "$ceilometer_statistics_critical_count$"
            description = "return critical if the number of samples is outside RANGE (default: 0:, never critical)"
        }
        "--warn_age" = {
            value = "$ceilometer_statistics_warn_age$"
            description = "return warning if the age in minutes of the last value is outside RANGE (default: 0:30, warn if older than 30 minutes)"
        }
        "--critical_age" = {
            value = "$ceilometer_statistics_critical_age$"
            description = "return critical if the age in minutes of the last value is outside RANGE (default: 0:60, critical if older than 1 hour)"
        }
        "--aggregate" = {
            value = "$ceilometer_statistics_aggregate$"
            description = "Aggregate function to use. Can be one of avg or sum (avg is the default)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$ceilometer_statistics_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "cinder-services" {
    command = [ "/usr/lib/nagios/plugins/check_cinder_services" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$cinder_services_warn$"
            description = "return warning if number of up agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$cinder_services_critical$"
            description = "return critical if number of up agents is outside RANGE (default 1:, never critical)"
        }
        "--warn_disabled" = {
            value = "$cinder_services_warn_disabled$"
            description = "return warning if number of disabled agents is outside RANGE (default: @1:, warn if any disabled agents)"
        }
        "--critical_disabled" = {
            value = "$cinder_services_critical_disabled$"
            description = "return critical if number of disabled agents is outside RANGE (default: 0:, never critical)"
        }
        "--warn_down" = {
            value = "$cinder_services_warn_down$"
            description = "return warning if number of down agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical_down" = {
            value = "$cinder_services_critical_down$"
            description = "return critical if number of down agents is outside RANGE (default: 0, always critical if any)"
        }
        "--binary" = {
            value = "$cinder_services_binary$"
            description = "filter agent binary"
        }
        "--host" = {
            value = "$cinder_services_host$"
            description = "filter hostname"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$cinder_services_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "glance-images" {
    command = [ "/usr/lib/nagios/plugins/check_glance_images" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$glance_images_warn$"
            description = "return warning if repsonse time is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$glance_images_critical$"
            description = "return critical if repsonse time is outside RANGE (default 1:, never critical)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$glance_images_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "gnocchi-measures" {
    command = [ "/usr/lib/nagios/plugins/check_gnocchi_measures" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$gnocchi_measures_warn$"
            description = "return warning if number of measures is out of  range (default: 2:)"
        }
        "--critical" = {
            value = "$gnocchi_measures_critical$"
            description = "return critical if number of measures is out of range (default 1:)"
        }
        "--start" = {
            value = "$gnocchi_measures_start$"
            description = "start timestamp to query, default -1h"
        }
        "--stop" = {
            value = "$gnocchi_measures_stop$"
            description = "start timestamp to query, default +0h (now)"
        }
        "--project_id" = {
            value = "$gnocchi_measures_project_id$"
            description = "project id to query (mandatory, since otherwise query takes too long!)"
            required = True
        }
        "--metric" = {
            value = "$gnocchi_measures_metric$"
            description = "metric to query"
            required = True
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$gnocchi_measures_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "gnocchi-status" {
    command = [ "/usr/lib/nagios/plugins/check_gnocchi_status" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$gnocchi_status_warn$"
            description = "return warning if number of measures to process is out of range (default: 0:100)"
        }
        "--critical" = {
            value = "$gnocchi_status_critical$"
            description = "return critical if number of measures to process is out of range (default 0:200)"
        }
        "--warn_metrics" = {
            value = "$gnocchi_status_warn_metrics$"
            description = "return warning if number of metrics having measures to process outside RANGE (default: 0:100)"
        }
        "--critical_metrics" = {
            value = "$gnocchi_status_critical_metrics$"
            description = "return critical if number of metrics having measures to process is outside RANGE (default: 0:200)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$gnocchi_status_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "keystone-status" {
    command = [ "/usr/lib/nagios/plugins/check_keystone_status" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--tversion" = {
            value = "$keystone_status_tversion$"
            description = "the version of the keystoneclient to use to verify the token. currently supported is 3 and 2 (default 3)"
        }
        "--warn" = {
            value = "$keystone_status_warn$"
            description = "return warning if number of up agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$keystone_status_critical$"
            description = "return critical if number of up agents is outside RANGE (default 1:, never critical)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$keystone_status_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "neutron-agents" {
    command = [ "/usr/lib/nagios/plugins/check_neutron_agents" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$neutron_agents_warn$"
            description = "return warning if number of up agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$neutron_agents_critical$"
            description = "return critical if number of up agents is outside RANGE (default 1:, never critical)"
        }
        "--warn_disabled" = {
            value = "$neutron_agents_warn_disabled$"
            description = "return warning if number of disabled agents is outside RANGE (default: @1:, warn if any disabled agents)"
        }
        "--critical_disabled" = {
            value = "$neutron_agents_critical_disabled$"
            description = "return critical if number of disabled agents is outside RANGE (default: 0:, never critical)"
        }
        "--warn_down" = {
            value = "$neutron_agents_warn_down$"
            description = "return warning if number of down agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical_down" = {
            value = "$neutron_agents_critical_down$"
            description = "return critical if number of down agents is outside RANGE (default: 0, always critical if any)"
        }
        "--binary" = {
            value = "$neutron_agents_binary$"
            description = "filter agent binary"
        }
        "--host" = {
            value = "$neutron_agents_host$"
            description = "filter hostname"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$neutron_agents_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "neutron-floating-i-ps" {
    command = [ "/usr/lib/nagios/plugins/check_neutron_floating_i_ps" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$neutron_floating_i_ps_warn$"
            description = "return warning if number of assigned floating ip's is outside range (default: 0:200, warn if more than 200 are used)"
        }
        "--critical" = {
            value = "$neutron_floating_i_ps_critical$"
            description = "return critical if number of assigned floating ip's is outside RANGE (default 0:230, critical if more than 230 are used)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$neutron_floating_i_ps_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "neutron-network-i-p-availability" {
    command = [ "/usr/lib/nagios/plugins/check_neutron_network_i_p_availability" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$neutron_network_i_p_availability_warn$"
            description = "return warning if number of used ip's is outside range (default: 0:200, warn if more than 200 are used)"
        }
        "--critical" = {
            value = "$neutron_network_i_p_availability_critical$"
            description = "return critical if number of used ip's is outside RANGE (default 0:230, critical if more than 230 are used)"
        }
        "--network_uuid" = {
            value = "$neutron_network_i_p_availability_network_uuid$"
            description = "network_uuid to check"
            required = True
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$neutron_network_i_p_availability_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "neutron-routers" {
    command = [ "/usr/lib/nagios/plugins/check_neutron_routers" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$neutron_routers_warn$"
            description = "Warning range for DOWN routers (default: \"0:\")"
        }
        "--critical" = {
            value = "$neutron_routers_critical$"
            description = "Critical range for DOWN routers (default: \":10\")"
        }
        "--warn-build" = {
            value = "$neutron_routers_warn_build$"
            description = "Warning range for BUILD routers (default: \"0:\")"
        }
        "--critical-build" = {
            value = "$neutron_routers_critical_build$"
            description = "Critical range \\ \\ for BUILD routers (default: \":10\")"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$neutron_routers_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "nova-hypervisors" {
    command = [ "/usr/lib/nagios/plugins/check_nova_hypervisors" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--host" = {
            value = "$nova_hypervisors_host$"
            description = "hostname where the hypervisor is running if not defined (default), summary of all hosts is used"
        }
        "--warn" = {
            value = "$nova_hypervisors_warn$"
            description = "return warning if number of running vms is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$nova_hypervisors_critical$"
            description = "return critical if number of running vms is outside RANGE (default 0:, never critical)"
        }
        "--warn_memory" = {
            value = "$nova_hypervisors_warn_memory$"
            description = "return warning if used memory is outside RANGE (default: 0:, never warn"
        }
        "--critical_memory" = {
            value = "$nova_hypervisors_critical_memory$"
            description = "return critical if used memory is outside RANGE (default: 0:, never critical"
        }
        "--warn_memory_percent" = {
            value = "$nova_hypervisors_warn_memory_percent$"
            description = "return warning if used memory is outside percent RANGE (default: 0:90, warn if 90%% of memory is used"
        }
        "--critical_memory_percent" = {
            value = "$nova_hypervisors_critical_memory_percent$"
            description = "return critical if used memory is outside percent RANGE (default: 0:90, critical if 95%% of memory is used"
        }
        "--warn_vcpus" = {
            value = "$nova_hypervisors_warn_vcpus$"
            description = "return warning if used vcpus is outside RANGE (default: 0:, never warn)"
        }
        "--critical_vcpus" = {
            value = "$nova_hypervisors_critical_vcpus$"
            description = "return critical if used vcpus is outside RANGE (default: 0, always critical if any"
        }
        "--warn_vcpus_percent" = {
            value = "$nova_hypervisors_warn_vcpus_percent$"
            description = "return warning if used vcpus is outside percent RANGE (default: 0:90, warn if 90%% of vcpus are used)"
        }
        "--critical_vcpus_percent" = {
            value = "$nova_hypervisors_critical_vcpus_percent$"
            description = "return critical if used vcpus is outside percent RANGE (default: 0:95, critical if 95%% of vcpus are used"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$nova_hypervisors_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "nova-services" {
    command = [ "/usr/lib/nagios/plugins/check_nova_services" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$nova_services_warn$"
            description = "return warning if number of up agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$nova_services_critical$"
            description = "return critical if number of up agents is outside RANGE (default 1:, never critical)"
        }
        "--warn-disabled" = {
            value = "$nova_services_warn_disabled$"
            description = "return warning if number of disabled agents is outside RANGE (default: @1:, warn if any disabled agents)"
        }
        "--critical-disabled" = {
            value = "$nova_services_critical_disabled$"
            description = "return critical if number of disabled agents is outside RANGE (default: 0:, never critical)"
        }
        "--warn-down" = {
            value = "$nova_services_warn_down$"
            description = "return warning if number of down agents is outside RANGE (default: 0:, never warn)"
        }
        "--critical-down" = {
            value = "$nova_services_critical_down$"
            description = "return critical if number of down agents is outside RANGE (default: 0, always critical if any)"
        }
        "--binary" = {
            value = "$nova_services_binary$"
            description = "filter agent binary"
        }
        "--host" = {
            value = "$nova_services_host$"
            description = "filter hostname"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$nova_services_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "panko-events" {
    command = [ "/usr/lib/nagios/plugins/check_panko_events" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--warn" = {
            value = "$panko_events_warn$"
            description = "return warning if repsonse time is outside RANGE (default: 0:, never warn)"
        }
        "--critical" = {
            value = "$panko_events_critical$"
            description = "return critical if repsonse time is outside RANGE (default 1:, never critical)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$panko_events_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

object CheckCommand "rally-results" {
    command = [ "/usr/lib/nagios/plugins/check_rally_results" ]
    arguments += {
        "--check-timeout" = {
            value = "openstack_timeout"
            description = "Timeout for total check execution in seconds (default: 10)"
        }
        "--resultfile" = {
            value = "$rally_results_resultfile$"
            description = "file to read results from (output of rally task results) if not specified, stdin is used."
        }
        "--warn" = {
            value = "$rally_results_warn$"
            description = "return warning if error counter is outside RANGE (default: :0, warn if any errors)"
        }
        "--critical" = {
            value = "$rally_results_critical$"
            description = "return critical if error counter is outside RANGE (default :0, critical if any errors)"
        }
        "--warn_total" = {
            value = "$rally_results_warn_total$"
            description = "return warning if number of scenarios is outside RANGE (default: 0:, never warn)"
        }
        "--critical_total" = {
            value = "$rally_results_critical_total$"
            description = "return critical if number of scenarios is outside RANGE (default: 0:, never critical)"
        }
        "--warn_slafail" = {
            value = "$rally_results_warn_slafail$"
            description = "return warning if number of sla failures is outside RANGE (default: :0, warn if any failures)"
        }
        "--critical_slafail" = {
            value = "$rally_results_critical_slafail$"
            description = "return critical if number of sla failures is outside RANGE (default: :0, critical if any failures)"
        }
        "--warn_fulldur" = {
            value = "$rally_results_warn_fulldur$"
            description = "return warning if full_duration is outside RANGE (default: 0:, never warn)"
        }
        "--critical_fulldur" = {
            value = "$rally_results_critical_fulldur$"
            description = "return critical if full_duration is outside RANGE (default: 0:, never critical)"
        }
        "--warn_loaddur" = {
            value = "$rally_results_warn_loaddur$"
            description = "return warning if load_duration is outside RANGE (default: 0:, never warn)"
        }
        "--critical_loaddur" = {
            value = "$rally_results_critical_loaddur$"
            description = "return critical if load_duration is outside RANGE (default: 0:, never critical)"
        }
        "--os-cloud" = {
            value = "$openstack_cloud$"
            description = "Named cloud to connect to"
        }
        "--os-auth-type" = {
            value = "$openstack_auth_type$"
            description = "Authentication type to use"
        }
        "--os-auth-plugin" = {
            value = "$openstack_auth_plugin$"
            description = "Authentication type to use"
        }
        "--os-auth-url" = {
            value = "$openstack_auth_url$"
            description = "Authentication URL"
        }
        "--os-system-scope" = {
            value = "$openstack_system_scope$"
            description = "Scope for system operations"
        }
        "--os-domain-id" = {
            value = "$openstack_domain_id$"
            description = "Domain ID to scope to"
        }
        "--os-domain-name" = {
            value = "$openstack_domain_name$"
            description = "Domain name to scope to"
        }
        "--os-project-id" = {
            value = "$openstack_project_id$"
            description = "Project ID to scope to"
        }
        "--os-tenant-id" = {
            value = "$openstack_tenant_id$"
            description = "Project ID to scope to"
        }
        "--os-project-name" = {
            value = "$openstack_project_name$"
            description = "Project name to scope to"
        }
        "--os-tenant-name" = {
            value = "$openstack_tenant_name$"
            description = "Project name to scope to"
        }
        "--os-project-domain-id" = {
            value = "$openstack_project_domain_id$"
            description = "Domain ID containing project"
        }
        "--os-project-domain-name" = {
            value = "$openstack_project_domain_name$"
            description = "Domain name containing project"
        }
        "--os-trust-id" = {
            value = "$openstack_trust_id$"
            description = "ID of the trust to use as a trustee use"
        }
        "--os-default-domain-id" = {
            value = "$openstack_default_domain_id$"
            description = "Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-default-domain-name" = {
            value = "$openstack_default_domain_name$"
            description = "Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication."
        }
        "--os-user-id" = {
            value = "$openstack_user_id$"
            description = "User id"
        }
        "--os-username" = {
            value = "$openstack_username$"
            description = "Username"
        }
        "--os-user-name" = {
            value = "$openstack_user_name$"
            description = "Username"
        }
        "--os-user-domain-id" = {
            value = "$openstack_user_domain_id$"
            description = "User's domain id"
        }
        "--os-user-domain-name" = {
            value = "$openstack_user_domain_name$"
            description = "User's domain name"
        }
        "--os-password" = {
            value = "$openstack_password$"
            description = "User's password"
        }
        "--insecure" = {
            value = "openstack_insecure"
            description = "Explicitly allow client to perform \"insecure\" TLS (https) requests. The server's certificate will not be verified against any certificate authorities. This option should be used with caution."
        }
        "--os-cacert" = {
            value = "$openstack_cacert$"
            description = "Specify a CA bundle file to use in verifying a TLS (https) server certificate. Defaults to env[OS_CACERT]."
        }
        "--os-cert" = {
            value = "$openstack_cert$"
            description = "The location for the keystore (PEM formatted) containing the public key of this client. Defaults to env[OS_CERT]."
        }
        "--os-key" = {
            value = "$openstack_key$"
            description = "The location for the keystore (PEM formatted) containing the private key of this client. Defaults to env[OS_KEY]."
        }
        "--timeout" = {
            value = "openstack_request_timeout"
            description = "Set request timeout (in seconds)."
        }
        "--collect-timing" = {
            value = "$rally_results_collect_timing$"
            description = "Collect per-API call timing information."
        }
        "--os-service-type" = {
            value = "$openstack_service_type$"
            description = "Service type to request from the catalog"
        }
        "--os-service-name" = {
            value = "$openstack_service_name$"
            description = "Service name to request from the catalog"
        }
        "--os-interface" = {
            value = "$openstack_interface$"
            description = "API Interface to use [public, internal, admin]"
        }
        "--os-region-name" = {
            value = "$openstack_region_name$"
            description = "Region of the cloud to use"
        }
        "--os-endpoint-override" = {
            value = "$openstack_endpoint_override$"
            description = "Endpoint to use instead of the endpoint in the catalog"
        }
        "--os-api-version" = {
            value = "$openstack_api_version$"
            description = "Which version of the service API to use"
        }
    }
}

