[project]
name = "openstack-checks"
version = "2.0.0"
description = "nagios/icinga plugins to monitor an openstack installation"
authors = [
    { name = "Jan Graichen", email = "jan.graichen@hpi.de" },
    { name = "Benedikt Trefzer", email = "benedikt.trefzer@cirrax.com" },
]
dependencies = [
    "gnocchiclient",
    "nagiosplugin",
    "pankoclient",
    "python-ceilometerclient",
    "python-cinderclient",
    "python-glanceclient",
    "python-keystoneclient",
    "python-neutronclient",
    "python-novaclient",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "GPLv3" }
keywords = ["openstack icinga nagios check"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: System :: Monitoring",
]

[project.urls]
Homepage = "https://github.com/cirrax/openstack-nagios-plugins"

[project.scripts]
check_ceilometer_statistics = "openstacknagios.ceilometer.statistics:main"
check_cinder_services = "openstacknagios.cinder.services:main"
check_glance_images = "openstacknagios.glance.images:main"
check_gnocchi_measures = "openstacknagios.gnocchi.measures:main"
check_gnocchi_status = "openstacknagios.gnocchi.status:main"
check_keystone_status = "openstacknagios.keystone.status:main"
check_neutron_agents = "openstacknagios.neutron.agents:main"
check_neutron_floatingips = "openstacknagios.neutron.floating_ips:main"
check_neutron_network_ip_availability = "openstacknagios.neutron.network_ip_availability:main"
check_neutron_routers = "openstacknagios.neutron.routers:main"
check_nova_hypervisors = "openstacknagios.nova.hypervisors:main"
check_nova_services = "openstacknagios.nova.services:main"
check_panko_events = "openstacknagios.panko.events:main"
check_rally_results = "openstacknagios.rally.results:main"

[tool.black]
target-version = ['py310']

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "R0801", # duplicate code is expected for e.g. CLI arguments in every check
]

[tool.pdm.dev-dependencies]
dev = ["black>=22.8.0", "pylint>=2.13.9"]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"
